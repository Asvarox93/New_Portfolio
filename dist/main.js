"use strict";
"use strict";
"use strict";
"use strict";
"use strict";
"use strict";
"use strict";
"use strict";
"use strict";$(window).on("load",function(){var e=500;$(".spinner-wrapper").fadeOut(e)}),$.fn.easeScroll=function(e){!function(){function t(){m.keyboardSupport&&!0&&l("keydown",r)}function a(){if(document.body){var e=document.body,a=document.documentElement,o=window.innerHeight,r=e.scrollHeight;if(v=document.compatMode.indexOf("CSS")>=0?a:e,d=e,t(),b=!0,top!=self)w=!0;else if(r>o&&(e.offsetHeight<=o||a.offsetHeight<=o)){var n=!1;if(a.style.height="auto",setTimeout(function(){n||a.scrollHeight==document.height||(n=!0,setTimeout(function(){a.style.height=document.height+"px",n=!1},100))},10),v.offsetHeight<=o){var i=document.createElement("div");i.style.clear="both",e.appendChild(i)}}m.fixedBackground||h||(e.style.backgroundAttachment="scroll",a.style.backgroundAttachment="scroll")}}function o(e,t,a,o){if(o||(o=1e3),function(e,t){e=e>0?1:-1,t=t>0?1:-1,(g.x!==e||g.y!==t)&&(g.x=e,g.y=t,k=[],D=0)}(t,a),1!=m.accelerationMax){var r=+new Date-D;if(r<m.accelerationDelta){var n=(1+30/r)/2;n>1&&(n=Math.min(n,m.accelerationMax),t*=n,a*=n)}D=+new Date}if(k.push({x:t,y:a,lastX:0>t?.99:-.99,lastY:0>a?.99:-.99,start:+new Date}),!x){var i=e===document.body;z(function r(){for(var n=+new Date,l=0,c=0,u=0;u<k.length;u++){var d=k[u],p=n-d.start,f=p>=m.animationTime,h=f?1:p/m.animationTime;m.pulseAlgorithm&&(h=function(e){return e>=1?1:0>=e?0:(1==m.pulseNormalize&&(m.pulseNormalize/=s(1)),s(e))}(h));var w=d.x*h-d.lastX>>0,g=d.y*h-d.lastY>>0;l+=w,c+=g,d.lastX+=w,d.lastY+=g,f&&(k.splice(u,1),u--)}i?window.scrollBy(l,c):(l&&(e.scrollLeft+=l),c&&(e.scrollTop+=c)),t||a||(k=[]),k.length?z(r,e,o/m.frameRate+1):x=!1},e,0),x=!0}}function r(e){var t=e.target,a=e.ctrlKey||e.altKey||e.metaKey||e.shiftKey&&e.keyCode!==S.spacebar;if(/input|textarea|select|embed/i.test(t.nodeName)||t.isContentEditable||e.defaultPrevented||a)return!0;if(c(t,"button")&&e.keyCode===S.spacebar)return!0;var r=0,n=0,l=i(d),u=l.clientHeight;switch(l==document.body&&(u=window.innerHeight),e.keyCode){case S.up:n=-m.arrowScroll;break;case S.down:n=m.arrowScroll;break;case S.spacebar:n=-(e.shiftKey?1:-1)*u*.9;break;case S.pageup:n=.9*-u;break;case S.pagedown:n=.9*u;break;case S.home:n=-l.scrollTop;break;case S.end:var s=l.scrollHeight-l.scrollTop-u;n=s>0?s+10:0;break;case S.left:r=-m.arrowScroll;break;case S.right:r=m.arrowScroll;break;default:return!0}o(l,r,n),e.preventDefault()}function n(e,t){for(var a=e.length;a--;)M[T(e[a])]=t;return t}function i(e){var t=[],a=v.scrollHeight;do{var o=M[T(e)];if(o)return n(t,o);if(t.push(e),a===e.scrollHeight&&(!w||v.clientHeight+70<a))return n(t,document.body)}while(e=e.parentNode)}function l(e,t,a){window.addEventListener(e,t,a||!1)}function c(e,t){return(e.nodeName||"").toLowerCase()===t.toLowerCase()}function u(e,t){return Math.floor(e/t)==e/t}function s(e){var t,a,o;return 1>(e*=m.pulseScale)?t=e-(1-Math.exp(-e)):(a=Math.exp(-1),e-=1,o=1-Math.exp(-e),t=a+o*(1-a)),t*m.pulseNormalize}var d,p=$.extend({frameRate:60,animationTime:1e3,stepSize:120,pulseAlgorithm:!0,pulseScale:8,pulseNormalize:1,accelerationDelta:20,accelerationMax:1,keyboardSupport:!0,arrowScroll:50,touchpadSupport:!0,fixedBackground:!0},e),f={frameRate:p.frameRate,animationTime:p.animationTime,stepSize:p.stepSize,pulseAlgorithm:p.pulseAlgorithm,pulseScale:p.pulseScale,pulseNormalize:p.pulseNormalize,accelerationDelta:p.accelerationDelta,accelerationMax:p.accelerationMax,keyboardSupport:p.keyboardSupport,arrowScroll:p.arrowScroll,touchpadSupport:p.touchpadSupport,fixedBackground:p.fixedBackground,excluded:""},m=f,h=!1,w=!1,g={x:0,y:0},b=!1,v=document.documentElement,y=[120,120,120],S={left:37,up:38,right:39,down:40,spacebar:32,pageup:33,pagedown:34,end:35,home:36},m=f,k=[],x=!1,D=+new Date,M={};setInterval(function(){M={}},1e4);var H,T=function(){var e=0;return function(t){return t.uniqueID||(t.uniqueID=e++)}}(),z=window.requestAnimationFrame||window.webkitRequestAnimationFrame||function(e,t,a){window.setTimeout(e,a||1e3/60)},A=/chrome|iPad/i.test(window.navigator.userAgent);"onmousewheel"in document&&A&&(l("mousedown",function(e){d=e.target}),l("mousewheel",function(e){b||a();var t=e.target,r=i(t);if(!r||e.defaultPrevented||c(d,"embed")||c(t,"embed")&&/\.pdf/i.test(t.src))return!0;var n=e.wheelDeltaX||0,l=e.wheelDeltaY||0;return n||l||(l=e.wheelDelta||0),!(m.touchpadSupport||!function(e){if(e){e=Math.abs(e),y.push(e),y.shift(),clearTimeout(H);var t=y[0]==y[1]&&y[1]==y[2],a=u(y[0],120)&&u(y[1],120)&&u(y[2],120);return!(t||a)}}(l))||(Math.abs(n)>1.2&&(n*=m.stepSize/120),Math.abs(l)>1.2&&(l*=m.stepSize/120),o(r,-n,-l),void e.preventDefault())}),l("load",a))}()},$("html").easeScroll();
"use strict";function onResize(o){var i=$(window).width(),n=$(".navigation_bar"),a=$(".navigation_menu");i<800?(a.hide(),n.show()):(a.show(),n.hide())}function onScroll(o){var i=$(document).scrollTop();$(".navigation_items a").each(function(){var o=$(this),n=$(o.attr("href"));n.position().top-70<=i&&n.position().top-70+n.height()>=i?($(".navigation_items ul li a").removeClass("active"),o.addClass("active")):o.removeClass("active")})}$(document).ready(function(){var o=$(".navigation_menu"),i=$(".navigation_bar");i.click(function(){$(this).toggleClass("navigation_bar--open"),o.toggle()}),onResize(),$(window).on("resize",onResize),$(document).on("scroll",onScroll),$('a[href^="#"]').on("click",function(o){o.preventDefault(),$(document).off("scroll"),onResize(),i.removeClass("navigation_bar--open"),$("a").each(function(){$(this).removeClass("active"),$(this).parent().removeClass("active")}),$(this).addClass("active"),$(this).parent().addClass("active");var n=this.hash,a=$(n);$("html, body").stop().animate({scrollTop:a.offset().top-70},500,"swing",function(){window.location.hash=n,$(document).on("scroll",onScroll)})})});
"use strict";
"use strict";
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFib3V0LW1lLmpzIiwiYmlvZ3JhcGh5LmpzIiwiYmxvZy5qcyIsImNsaWVudC1yZXZpZXcuanMiLCJjb250YWN0LmpzIiwiZm9vdGVyLmpzIiwiaGVhZGVyLmpzIiwia25vd2xlZGdlLmpzIiwibWFpbi5qcyIsIm1lbnUuanMiLCJwcm9qZWN0cy5qcyIsInNraWxscy5qcyJdLCJuYW1lcyI6WyIkIiwid2luZG93Iiwib24iLCJoaWRlUHJlbG9hZGVyIiwicHJlbG9hZGVyIiwiZm4iLCJlYXNlU2Nyb2xsIiwib3B0aW9ucyIsImUiLCJ2Iiwia2V5Ym9hcmRTdXBwb3J0IiwidSIsInIiLCJ0IiwiZG9jdW1lbnQiLCJib2R5IiwibyIsIm4iLCJzY3JvbGxIZWlnaHQiLCJpbmRleE9mIiwidyIsIngiLCJ0b3AiLCJzZWxmIiwieSIsIlMiLCJjb21wYXRNb2RlIiwib2Zmc2V0SGVpZ2h0IiwiYSIsInN0eWxlIiwiaGVpZ2h0Iiwic2V0VGltZW91dCIsImwiLCJjcmVhdGVFbGVtZW50IiwiY2xlYXIiLCJhcHBlbmRDaGlsZCIsImZpeGVkQmFja2dyb3VuZCIsImIiLCJiYWNrZ3JvdW5kQXR0YWNobWVudCIsImsiLCJNIiwiQyIsImQiLCJhY2NlbGVyYXRpb25NYXgiLCJEYXRlIiwiYWNjZWxlcmF0aW9uRGVsdGEiLCJpIiwiTWF0aCIsIm1pbiIsInB1c2giLCJsYXN0WCIsImxhc3RZIiwic3RhcnQiLCJUIiwiRSIsImMiLCJsZW5ndGgiLCJzIiwiYW5pbWF0aW9uVGltZSIsImYiLCJwdWxzZUFsZ29yaXRobSIsInAiLCJwdWxzZU5vcm1hbGl6ZSIsIm0iLCJoIiwic3BsaWNlIiwic2Nyb2xsQnkiLCJzY3JvbGxMZWZ0Iiwic2Nyb2xsVG9wIiwiZnJhbWVSYXRlIiwidGFyZ2V0IiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJzaGlmdEtleSIsImtleUNvZGUiLCJIIiwic3BhY2ViYXIiLCJ0ZXN0Iiwibm9kZU5hbWUiLCJpc0NvbnRlbnRFZGl0YWJsZSIsImRlZmF1bHRQcmV2ZW50ZWQiLCJjbGllbnRIZWlnaHQiLCJpbm5lckhlaWdodCIsImFycm93U2Nyb2xsIiwiZG93biIsInBhZ2V1cCIsInBhZ2Vkb3duIiwiaG9tZSIsImVuZCIsImxlZnQiLCJyaWdodCIsInByZXZlbnREZWZhdWx0IiwieiIsIk4iLCJwYXJlbnROb2RlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvTG93ZXJDYXNlIiwiZmxvb3IiLCJwdWxzZVNjYWxlIiwiZXhwIiwic2V0dGluZ3MiLCJleHRlbmQiLCJzdGVwU2l6ZSIsInRvdWNocGFkU3VwcG9ydCIsImciLCJleGNsdWRlZCIsImRvY3VtZW50RWxlbWVudCIsIkQiLCJ1cCIsInNldEludGVydmFsIiwidW5pcXVlSUQiLCJ3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJLIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic3JjIiwid2hlZWxEZWx0YVgiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJhYnMiLCJzaGlmdCIsImNsZWFyVGltZW91dCIsIkEiLCJvblJlc2l6ZSIsImV2ZW50Iiwid2lkdGgiLCJuYXZfYmFyIiwiaGlkZSIsIm5hdl9tZW51Iiwic2hvdyIsIm9uU2Nyb2xsIiwic2Nyb2xsUG9zIiwiY3VyckxpbmsiLCJ0aGlzIiwiYXR0ciIsInJlZkVsZW1lbnQiLCJwb3NpdGlvbiIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJyZWFkeSIsInRvZ2dsZUNsYXNzIiwidG9nZ2xlIiwib2ZmIiwicGFyZW50IiwiJHRhcmdldCIsInN0b3AiLCJhbmltYXRlIiwib2Zmc2V0IiwibG9jYXRpb24iXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUNBQTtBQ0FBO0FDQUE7QUNBQTtBQ0FBO0FDQUE7YUNDQUEsRUFBQUMsUUFBQUMsR0FBQSxPQUFBLFdBQ0VELElBQVFDLEVBQW9CLElBRWpCQyxFQUFBQSxvQkFDSEMsUUFBQUEsS0FNVkosRUFBQUssR0FBQUMsV0FBQSxTQUFBQyxJQUNLRCxXQUNDLFNBQVdFLElBRUxDLEVB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QSxHQUFBQSxTQUFBQSxVQUVBM0gsRUFBRWMsZ0JBQWFaLEdBQUEsUUFBVWdJLFNBQXpCMUgsR0FDQUEsRUFBQW9GLGlCQUNFNUYsRUFBQWMsVUFBRmdJLElBQUEsVUFDSXRJLFdBQ0FSLEVBQUVjLFlBQWMsd0JBQ2hCNkcsRUFBQUEsS0FBQUEsS0FBQUEsV0FDQUcsRUFBQUEsTUFBUVcsWUFBWSxVQUNsQnpJLEVBQUZxSSxNQUFZVSxTQUFBTixZQUFZLFlBRXBCekksRUFBQUEsTUFBRTBJLFNBQU1LLFVBQ1gvSSxFQUhEcUksTUFBQVUsU0FBQUwsU0FBQSxVQUtBMUksSUFBRXNFLEVBQU15RSxLQUFTTCxLQUdiTSxFQUFVaEosRUFBRXNFLEdBRGhCdEUsRUFBQSxjQUFhaUosT0FBYkMsU0FDSUYsVUFBWTFFLEVBQWhCNkUsU0FBQTdILElBQUEsSUFDRSxJQUFBLFFBQWMySCxXQUNaaEosT0FBQW1KLFNBQWFKLEtBQVFHLEVBQ3RCbkosRUFGSGMsVUFBQVosR0FFaUIsU0FBWWdJO0FDN0JyQztBQ0FBIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjsiLCJcInVzZSBzdHJpY3RcIjsiLCJcInVzZSBzdHJpY3RcIjsiLCJcInVzZSBzdHJpY3RcIjsiLCJcInVzZSBzdHJpY3RcIjsiLCJcInVzZSBzdHJpY3RcIjsiLCJcInVzZSBzdHJpY3RcIjsiLCJcInVzZSBzdHJpY3RcIjsiLCJcbi8vUHJlbG9hZGVyXG4kKHdpbmRvdykub24oJ2xvYWQnLGZ1bmN0aW9uKCl7XG4gICAgY29uc3QgcHJlbG9hZGVyRmFkZU91dFRpbWUgPSA1MDA7XG4gICAgZnVuY3Rpb24gaGlkZVByZWxvYWRlcigpIHtcbiAgICBjb25zdCBwcmVsb2FkZXIgPSAkKCcuc3Bpbm5lci13cmFwcGVyJyk7XG4gICAgcHJlbG9hZGVyLmZhZGVPdXQocHJlbG9hZGVyRmFkZU91dFRpbWUpO1xuICAgIH1cbiAgICBoaWRlUHJlbG9hZGVyKCk7XG59KTtcblxuLy9TbW9vdGhXaGVlbCBzY3JvbGxcbiQuZm4uZWFzZVNjcm9sbCA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAhIGZ1bmN0aW9uKCkge1xuICAgICAgICBmdW5jdGlvbiBlKCkge1xuICAgICAgICAgICAgdmFyIGUgPSAhMTtcbiAgICAgICAgICAgIGUgJiYgYyhcImtleWRvd25cIiwgciksIHYua2V5Ym9hcmRTdXBwb3J0ICYmICFlICYmIHUoXCJrZXlkb3duXCIsIHIpXG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiB0KCkge1xuICAgICAgICAgICAgaWYgKGRvY3VtZW50LmJvZHkpIHtcbiAgICAgICAgICAgICAgICB2YXIgdCA9IGRvY3VtZW50LmJvZHksXG4gICAgICAgICAgICAgICAgICAgIG8gPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgIG4gPSB3aW5kb3cuaW5uZXJIZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgIHIgPSB0LnNjcm9sbEhlaWdodDtcbiAgICAgICAgICAgICAgICBpZiAoUyA9IGRvY3VtZW50LmNvbXBhdE1vZGUuaW5kZXhPZihcIkNTU1wiKSA+PSAwID8gbyA6IHQsIHcgPSB0LCBlKCksIHggPSAhMCwgdG9wICE9IHNlbGYpIHkgPSAhMDtcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChyID4gbiAmJiAodC5vZmZzZXRIZWlnaHQgPD0gbiB8fCBvLm9mZnNldEhlaWdodCA8PSBuKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYSA9ICExLFxuICAgICAgICAgICAgICAgICAgICAgICAgaSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgfHwgby5zY3JvbGxIZWlnaHQgPT0gZG9jdW1lbnQuaGVpZ2h0IHx8IChhID0gITAsIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG8uc3R5bGUuaGVpZ2h0ID0gZG9jdW1lbnQuaGVpZ2h0ICsgXCJweFwiLCBhID0gITFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAxMDApKVxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG8uc3R5bGUuaGVpZ2h0ID0gXCJhdXRvXCIsIHNldFRpbWVvdXQoaSwgMTApLCBTLm9mZnNldEhlaWdodCA8PSBuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBsLnN0eWxlLmNsZWFyID0gXCJib3RoXCIsIHQuYXBwZW5kQ2hpbGQobClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2LmZpeGVkQmFja2dyb3VuZCB8fCBiIHx8ICh0LnN0eWxlLmJhY2tncm91bmRBdHRhY2htZW50ID0gXCJzY3JvbGxcIiwgby5zdHlsZS5iYWNrZ3JvdW5kQXR0YWNobWVudCA9IFwic2Nyb2xsXCIpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvKGUsIHQsIG8sIG4pIHtcbiAgICAgICAgICAgIGlmIChuIHx8IChuID0gMWUzKSwgZCh0LCBvKSwgMSAhPSB2LmFjY2VsZXJhdGlvbk1heCkge1xuICAgICAgICAgICAgICAgIHZhciByID0gK25ldyBEYXRlLFxuICAgICAgICAgICAgICAgICAgICBhID0gciAtIEM7XG4gICAgICAgICAgICAgICAgaWYgKGEgPCB2LmFjY2VsZXJhdGlvbkRlbHRhKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpID0gKDEgKyAzMCAvIGEpIC8gMjtcbiAgICAgICAgICAgICAgICAgICAgaSA+IDEgJiYgKGkgPSBNYXRoLm1pbihpLCB2LmFjY2VsZXJhdGlvbk1heCksIHQgKj0gaSwgbyAqPSBpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBDID0gK25ldyBEYXRlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoTS5wdXNoKHtcbiAgICAgICAgICAgICAgICB4OiB0LFxuICAgICAgICAgICAgICAgIHk6IG8sXG4gICAgICAgICAgICAgICAgbGFzdFg6IDAgPiB0ID8gLjk5IDogLS45OSxcbiAgICAgICAgICAgICAgICBsYXN0WTogMCA+IG8gPyAuOTkgOiAtLjk5LFxuICAgICAgICAgICAgICAgIHN0YXJ0OiArbmV3IERhdGVcbiAgICAgICAgICAgIH0pLCAhVCkge1xuICAgICAgICAgICAgICAgIHZhciBsID0gZSA9PT0gZG9jdW1lbnQuYm9keSxcbiAgICAgICAgICAgICAgICAgICAgdSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgciA9ICtuZXcgRGF0ZSwgYSA9IDAsIGkgPSAwLCBjID0gMDsgYyA8IE0ubGVuZ3RoOyBjKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcyA9IE1bY10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQgPSByIC0gcy5zdGFydCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZiA9IGQgPj0gdi5hbmltYXRpb25UaW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoID0gZiA/IDEgOiBkIC8gdi5hbmltYXRpb25UaW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYucHVsc2VBbGdvcml0aG0gJiYgKGggPSBwKGgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbSA9IHMueCAqIGggLSBzLmxhc3RYID4+IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHcgPSBzLnkgKiBoIC0gcy5sYXN0WSA+PiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgKz0gbSwgaSArPSB3LCBzLmxhc3RYICs9IG0sIHMubGFzdFkgKz0gdywgZiAmJiAoTS5zcGxpY2UoYywgMSksIGMtLSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGwgPyB3aW5kb3cuc2Nyb2xsQnkoYSwgaSkgOiAoYSAmJiAoZS5zY3JvbGxMZWZ0ICs9IGEpLCBpICYmIChlLnNjcm9sbFRvcCArPSBpKSksIHQgfHwgbyB8fCAoTSA9IFtdKSwgTS5sZW5ndGggPyBFKHUsIGUsIG4gLyB2LmZyYW1lUmF0ZSArIDEpIDogVCA9ICExXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgRSh1LCBlLCAwKSwgVCA9ICEwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBuKGUpIHtcbiAgICAgICAgICAgIHggfHwgdCgpO1xuICAgICAgICAgICAgdmFyIG4gPSBlLnRhcmdldCxcbiAgICAgICAgICAgICAgICByID0gbChuKTtcbiAgICAgICAgICAgIGlmICghciB8fCBlLmRlZmF1bHRQcmV2ZW50ZWQgfHwgcyh3LCBcImVtYmVkXCIpIHx8IHMobiwgXCJlbWJlZFwiKSAmJiAvXFwucGRmL2kudGVzdChuLnNyYykpIHJldHVybiAhMDtcbiAgICAgICAgICAgIHZhciBhID0gZS53aGVlbERlbHRhWCB8fCAwLFxuICAgICAgICAgICAgICAgIGkgPSBlLndoZWVsRGVsdGFZIHx8IDA7XG4gICAgICAgICAgICByZXR1cm4gYSB8fCBpIHx8IChpID0gZS53aGVlbERlbHRhIHx8IDApLCAhdi50b3VjaHBhZFN1cHBvcnQgJiYgZihpKSA/ICEwIDogKE1hdGguYWJzKGEpID4gMS4yICYmIChhICo9IHYuc3RlcFNpemUgLyAxMjApLCBNYXRoLmFicyhpKSA+IDEuMiAmJiAoaSAqPSB2LnN0ZXBTaXplIC8gMTIwKSwgbyhyLCAtYSwgLWkpLCB2b2lkIGUucHJldmVudERlZmF1bHQoKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHIoZSkge1xuICAgICAgICAgICAgdmFyIHQgPSBlLnRhcmdldCxcbiAgICAgICAgICAgICAgICBuID0gZS5jdHJsS2V5IHx8IGUuYWx0S2V5IHx8IGUubWV0YUtleSB8fCBlLnNoaWZ0S2V5ICYmIGUua2V5Q29kZSAhPT0gSC5zcGFjZWJhcjtcbiAgICAgICAgICAgIGlmICgvaW5wdXR8dGV4dGFyZWF8c2VsZWN0fGVtYmVkL2kudGVzdCh0Lm5vZGVOYW1lKSB8fCB0LmlzQ29udGVudEVkaXRhYmxlIHx8IGUuZGVmYXVsdFByZXZlbnRlZCB8fCBuKSByZXR1cm4gITA7XG4gICAgICAgICAgICBpZiAocyh0LCBcImJ1dHRvblwiKSAmJiBlLmtleUNvZGUgPT09IEguc3BhY2ViYXIpIHJldHVybiAhMDtcbiAgICAgICAgICAgIHZhciByLCBhID0gMCxcbiAgICAgICAgICAgICAgICBpID0gMCxcbiAgICAgICAgICAgICAgICB1ID0gbCh3KSxcbiAgICAgICAgICAgICAgICBjID0gdS5jbGllbnRIZWlnaHQ7XG4gICAgICAgICAgICBzd2l0Y2ggKHUgPT0gZG9jdW1lbnQuYm9keSAmJiAoYyA9IHdpbmRvdy5pbm5lckhlaWdodCksIGUua2V5Q29kZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgSC51cDpcbiAgICAgICAgICAgICAgICAgICAgaSA9IC12LmFycm93U2Nyb2xsO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIEguZG93bjpcbiAgICAgICAgICAgICAgICAgICAgaSA9IHYuYXJyb3dTY3JvbGw7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgSC5zcGFjZWJhcjpcbiAgICAgICAgICAgICAgICAgICAgciA9IGUuc2hpZnRLZXkgPyAxIDogLTEsIGkgPSAtciAqIGMgKiAuOTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBILnBhZ2V1cDpcbiAgICAgICAgICAgICAgICAgICAgaSA9IC45ICogLWM7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgSC5wYWdlZG93bjpcbiAgICAgICAgICAgICAgICAgICAgaSA9IC45ICogYztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBILmhvbWU6XG4gICAgICAgICAgICAgICAgICAgIGkgPSAtdS5zY3JvbGxUb3A7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgSC5lbmQ6XG4gICAgICAgICAgICAgICAgICAgIHZhciBkID0gdS5zY3JvbGxIZWlnaHQgLSB1LnNjcm9sbFRvcCAtIGM7XG4gICAgICAgICAgICAgICAgICAgIGkgPSBkID4gMCA/IGQgKyAxMCA6IDA7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgSC5sZWZ0OlxuICAgICAgICAgICAgICAgICAgICBhID0gLXYuYXJyb3dTY3JvbGw7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgSC5yaWdodDpcbiAgICAgICAgICAgICAgICAgICAgYSA9IHYuYXJyb3dTY3JvbGw7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhMFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbyh1LCBhLCBpKSwgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBhKGUpIHtcbiAgICAgICAgICAgIHcgPSBlLnRhcmdldFxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaShlLCB0KSB7XG4gICAgICAgICAgICBmb3IgKHZhciBvID0gZS5sZW5ndGg7IG8tLTspIHpbTihlW29dKV0gPSB0O1xuICAgICAgICAgICAgcmV0dXJuIHRcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGwoZSkge1xuICAgICAgICAgICAgdmFyIHQgPSBbXSxcbiAgICAgICAgICAgICAgICBvID0gUy5zY3JvbGxIZWlnaHQ7XG4gICAgICAgICAgICBkbyB7XG4gICAgICAgICAgICAgICAgdmFyIG4gPSB6W04oZSldO1xuICAgICAgICAgICAgICAgIGlmIChuKSByZXR1cm4gaSh0LCBuKTtcbiAgICAgICAgICAgICAgICBpZiAodC5wdXNoKGUpLCBvID09PSBlLnNjcm9sbEhlaWdodCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXkgfHwgUy5jbGllbnRIZWlnaHQgKyA3MCA8IG8pIHJldHVybiBpKHQsIGRvY3VtZW50LmJvZHkpXG4gICAgICAgICAgICAgICAgfSBcbiAgICAgICAgICAgIH0gd2hpbGUgKGUgPSBlLnBhcmVudE5vZGUpXG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiB1KGUsIHQsIG8pIHtcbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKGUsIHQsIG8gfHwgITEpXG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBjKGUsIHQsIG8pIHtcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKGUsIHQsIG8gfHwgITEpXG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzKGUsIHQpIHtcbiAgICAgICAgICAgIHJldHVybiAoZS5ub2RlTmFtZSB8fCBcIlwiKS50b0xvd2VyQ2FzZSgpID09PSB0LnRvTG93ZXJDYXNlKClcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGQoZSwgdCkge1xuICAgICAgICAgICAgZSA9IGUgPiAwID8gMSA6IC0xLCB0ID0gdCA+IDAgPyAxIDogLTEsIChrLnggIT09IGUgfHwgay55ICE9PSB0KSAmJiAoay54ID0gZSwgay55ID0gdCwgTSA9IFtdLCBDID0gMClcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGYoZSkge1xuICAgICAgICAgICAgaWYgKGUpIHtcbiAgICAgICAgICAgICAgICBlID0gTWF0aC5hYnMoZSksIEQucHVzaChlKSwgRC5zaGlmdCgpLCBjbGVhclRpbWVvdXQoQSk7XG4gICAgICAgICAgICAgICAgdmFyIHQgPSBEWzBdID09IERbMV0gJiYgRFsxXSA9PSBEWzJdLFxuICAgICAgICAgICAgICAgICAgICBvID0gaChEWzBdLCAxMjApICYmIGgoRFsxXSwgMTIwKSAmJiBoKERbMl0sIDEyMCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuICEodCB8fCBvKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaChlLCB0KSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihlIC8gdCkgPT0gZSAvIHRcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIG0oZSkge1xuICAgICAgICAgICAgdmFyIHQsIG8sIG47XG4gICAgICAgICAgICByZXR1cm4gZSAqPSB2LnB1bHNlU2NhbGUsIDEgPiBlID8gdCA9IGUgLSAoMSAtIE1hdGguZXhwKC1lKSkgOiAobyA9IE1hdGguZXhwKC0xKSwgZSAtPSAxLCBuID0gMSAtIE1hdGguZXhwKC1lKSwgdCA9IG8gKyBuICogKDEgLSBvKSksIHQgKiB2LnB1bHNlTm9ybWFsaXplXG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBwKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBlID49IDEgPyAxIDogMCA+PSBlID8gMCA6ICgxID09IHYucHVsc2VOb3JtYWxpemUgJiYgKHYucHVsc2VOb3JtYWxpemUgLz0gbSgxKSksIG0oZSkpXG4gICAgICAgIH1cblxuICAgICAgICB2YXIgc2V0dGluZ3MgPSAkLmV4dGVuZCh7XG4gICAgICAgICAgICAvLyBUaGVzZSBhcmUgdGhlIGRlZmF1bHRzLlxuICAgICAgICAgICAgZnJhbWVSYXRlOiA2MCxcbiAgICAgICAgICAgIGFuaW1hdGlvblRpbWU6IDEwMDAsXG4gICAgICAgICAgICBzdGVwU2l6ZTogMTIwLFxuICAgICAgICAgICAgcHVsc2VBbGdvcml0aG06ICEwLFxuICAgICAgICAgICAgcHVsc2VTY2FsZTogOCxcbiAgICAgICAgICAgIHB1bHNlTm9ybWFsaXplOiAxLFxuICAgICAgICAgICAgYWNjZWxlcmF0aW9uRGVsdGE6IDIwLFxuICAgICAgICAgICAgYWNjZWxlcmF0aW9uTWF4OiAxLFxuICAgICAgICAgICAga2V5Ym9hcmRTdXBwb3J0OiAhMCxcbiAgICAgICAgICAgIGFycm93U2Nyb2xsOiA1MCxcbiAgICAgICAgICAgIHRvdWNocGFkU3VwcG9ydDogITAsXG4gICAgICAgICAgICBmaXhlZEJhY2tncm91bmQ6ICEwXG4gICAgICAgIH0sIG9wdGlvbnMgKTtcblxuICAgICAgICB2YXIgdywgZyA9IHtcbiAgICAgICAgICAgIGZyYW1lUmF0ZTogc2V0dGluZ3MuZnJhbWVSYXRlLFxuICAgICAgICAgICAgYW5pbWF0aW9uVGltZTogc2V0dGluZ3MuYW5pbWF0aW9uVGltZSxcbiAgICAgICAgICAgIHN0ZXBTaXplOiBzZXR0aW5ncy5zdGVwU2l6ZSxcbiAgICAgICAgICAgIHB1bHNlQWxnb3JpdGhtOiBzZXR0aW5ncy5wdWxzZUFsZ29yaXRobSxcbiAgICAgICAgICAgIHB1bHNlU2NhbGU6IHNldHRpbmdzLnB1bHNlU2NhbGUsXG4gICAgICAgICAgICBwdWxzZU5vcm1hbGl6ZTogc2V0dGluZ3MucHVsc2VOb3JtYWxpemUsXG4gICAgICAgICAgICBhY2NlbGVyYXRpb25EZWx0YTogc2V0dGluZ3MuYWNjZWxlcmF0aW9uRGVsdGEsXG4gICAgICAgICAgICBhY2NlbGVyYXRpb25NYXg6IHNldHRpbmdzLmFjY2VsZXJhdGlvbk1heCxcbiAgICAgICAgICAgIGtleWJvYXJkU3VwcG9ydDogc2V0dGluZ3Mua2V5Ym9hcmRTdXBwb3J0LFxuICAgICAgICAgICAgYXJyb3dTY3JvbGw6IHNldHRpbmdzLmFycm93U2Nyb2xsLFxuICAgICAgICAgICAgdG91Y2hwYWRTdXBwb3J0OiBzZXR0aW5ncy50b3VjaHBhZFN1cHBvcnQsXG4gICAgICAgICAgICBmaXhlZEJhY2tncm91bmQ6IHNldHRpbmdzLmZpeGVkQmFja2dyb3VuZCxcbiAgICAgICAgICAgIGV4Y2x1ZGVkOiBcIlwiXG4gICAgICAgIH0sXG4gICAgICAgICAgICB2ID0gZyxcbiAgICAgICAgICAgIGIgPSAhMSxcbiAgICAgICAgICAgIHkgPSAhMSxcbiAgICAgICAgICAgIGsgPSB7XG4gICAgICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgICAgICB5OiAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgeCA9ICExLFxuICAgICAgICAgICAgUyA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxcbiAgICAgICAgICAgIEQgPSBbMTIwLCAxMjAsIDEyMF0sXG4gICAgICAgICAgICBIID0ge1xuICAgICAgICAgICAgICAgIGxlZnQ6IDM3LFxuICAgICAgICAgICAgICAgIHVwOiAzOCxcbiAgICAgICAgICAgICAgICByaWdodDogMzksXG4gICAgICAgICAgICAgICAgZG93bjogNDAsXG4gICAgICAgICAgICAgICAgc3BhY2ViYXI6IDMyLFxuICAgICAgICAgICAgICAgIHBhZ2V1cDogMzMsXG4gICAgICAgICAgICAgICAgcGFnZWRvd246IDM0LFxuICAgICAgICAgICAgICAgIGVuZDogMzUsXG4gICAgICAgICAgICAgICAgaG9tZTogMzZcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB2ID0gZyxcbiAgICAgICAgICAgIE0gPSBbXSxcbiAgICAgICAgICAgIFQgPSAhMSxcbiAgICAgICAgICAgIEMgPSArbmV3IERhdGUsXG4gICAgICAgICAgICB6ID0ge307XG4gICAgICAgIHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgeiA9IHt9XG4gICAgICAgIH0sIDFlNCk7XG4gICAgICAgIHZhciBBLCBOID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIGUgPSAwO1xuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0LnVuaXF1ZUlEIHx8ICh0LnVuaXF1ZUlEID0gZSsrKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0oKSxcbiAgICAgICAgICAgIEUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8IGZ1bmN0aW9uKGUsIHQsIG8pIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoZSwgbyB8fCAxZTMgLyA2MClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KCksXG4gICAgICAgICAgICBLID0gL2Nocm9tZXxpUGFkL2kudGVzdCh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCksXG4gICAgICAgICAgICBMID0gXCJvbm1vdXNld2hlZWxcIiBpbiBkb2N1bWVudDtcbiAgICAgICAgTCAmJiBLICYmICh1KFwibW91c2Vkb3duXCIsIGEpLCB1KFwibW91c2V3aGVlbFwiLCBuKSwgdShcImxvYWRcIiwgdCkpXG4gICAgfSgpO1xufVxuJChcImh0bWxcIikuZWFzZVNjcm9sbCgpOyIsIiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBuYXZfbWVudSA9ICQoJy5uYXZpZ2F0aW9uX21lbnUnKTtcbiAgICBjb25zdCBuYXZfYmFyID0gJCgnLm5hdmlnYXRpb25fYmFyJyk7XG4gICAgLy9oYW1idXJnZXJcbiAgICBuYXZfYmFyLmNsaWNrKGZ1bmN0aW9uKCl7XG4gICAgICAgICQodGhpcykudG9nZ2xlQ2xhc3MoJ25hdmlnYXRpb25fYmFyLS1vcGVuJyk7XG4gICAgICAgIG5hdl9tZW51LnRvZ2dsZSgpO1xuICAgIH0pO1xuICAgIFxuICAgIG9uUmVzaXplKCk7XG4gICAgJCh3aW5kb3cpLm9uKCdyZXNpemUnLG9uUmVzaXplKVxuICAgICQoZG9jdW1lbnQpLm9uKFwic2Nyb2xsXCIsIG9uU2Nyb2xsKTtcbiAgICAvL3Ntb290aHNjcm9sbFxuICAgICQoJ2FbaHJlZl49XCIjXCJdJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAkKGRvY3VtZW50KS5vZmYoXCJzY3JvbGxcIik7XG4gICAgICAgIG9uUmVzaXplKCk7XG4gICAgICAgIG5hdl9iYXIucmVtb3ZlQ2xhc3MoJ25hdmlnYXRpb25fYmFyLS1vcGVuJyk7XG4gICAgICAgICQoJ2EnKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgIH0pXG4gICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgIFxuICAgICAgICBsZXQgdGFyZ2V0ID0gdGhpcy5oYXNoO1xuICAgICAgICBsZXQgJHRhcmdldCA9ICQodGFyZ2V0KTtcbiAgICAgICAgJCgnaHRtbCwgYm9keScpLnN0b3AoKS5hbmltYXRlKHtcbiAgICAgICAgICAgICdzY3JvbGxUb3AnOiAkdGFyZ2V0Lm9mZnNldCgpLnRvcC03MFxuICAgICAgICB9LCA1MDAsICdzd2luZycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gdGFyZ2V0O1xuICAgICAgICAgICAgJChkb2N1bWVudCkub24oXCJzY3JvbGxcIiwgb25TY3JvbGwpO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxufSk7XG5cbmZ1bmN0aW9uIG9uUmVzaXplKGV2ZW50KXtcbiAgICBjb25zdCB3aWR0aCA9ICQod2luZG93KS53aWR0aCgpO1xuICAgIGNvbnN0IG5hdl9iYXIgPSAkKCcubmF2aWdhdGlvbl9iYXInKTtcbiAgICBjb25zdCBuYXZfbWVudSA9ICQoJy5uYXZpZ2F0aW9uX21lbnUnKTtcbiAgICBcbiAgICBpZih3aWR0aDwgODAwKXtcbiAgICAgICAgbmF2X21lbnUuaGlkZSgpO1xuICAgICAgICBuYXZfYmFyLnNob3coKTtcbiAgICB9ZWxzZXtcbiAgICAgICAgbmF2X21lbnUuc2hvdygpO1xuICAgICAgICBuYXZfYmFyLmhpZGUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIG9uU2Nyb2xsKGV2ZW50KXtcbiAgICBsZXQgc2Nyb2xsUG9zID0gJChkb2N1bWVudCkuc2Nyb2xsVG9wKCk7XG4gICAgJCgnLm5hdmlnYXRpb25faXRlbXMgYScpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICBsZXQgY3VyckxpbmsgPSAkKHRoaXMpO1xuICAgICAgICBsZXQgcmVmRWxlbWVudCA9ICQoY3VyckxpbmsuYXR0cihcImhyZWZcIikpO1xuICAgICAgICBpZiAocmVmRWxlbWVudC5wb3NpdGlvbigpLnRvcC03MCA8PSBzY3JvbGxQb3MgJiYgKHJlZkVsZW1lbnQucG9zaXRpb24oKS50b3AtNzApICsgcmVmRWxlbWVudC5oZWlnaHQoKSA+PSBzY3JvbGxQb3MpIHtcbiAgICAgICAgICAgICQoJy5uYXZpZ2F0aW9uX2l0ZW1zIHVsIGxpIGEnKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgIGN1cnJMaW5rLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICBjdXJyTGluay5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgfVxuICAgIH0pO1xufSIsIlwidXNlIHN0cmljdFwiOyIsIlwidXNlIHN0cmljdFwiOyJdfQ==
